[{"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\index.js":"1","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\App.js":"2","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reportWebVitals.js":"3","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\routes.js":"4","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\hoc\\layout.js":"5","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Home\\index.js":"6","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Header\\authHeader.js":"7","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Header\\index.js":"8","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Footer\\index.js":"9","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Footer\\item.js":"10","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Shop\\index.js":"11","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\OurStory\\index.js":"12","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\OurCraft\\index.js":"13","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Contact\\index.js":"14","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\index.js":"15","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\login.js":"16","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\signup.js":"17","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\oauthWithEmail.js":"18","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\form\\formfield.js":"19","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\form\\formActions.js":"20","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\identityProviderList.js":"21","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\dashTitle.js":"22","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\contactCardList.js":"23","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\contactCard.js":"24","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\button.js":"25","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\aboutCard.js":"26","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\aboutUsCard.js":"27","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\productCard.js":"28","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\collapseCheckbox.js":"29","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\priceCollapse.js":"30","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\listCollapse.js":"31","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\message\\index.js":"32","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Admin\\add_product.js":"33","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\form\\fileupload.js":"34","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\auth.js":"35","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\firebase.js":"36","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\store.js":"37","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\index.js":"38","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\reducerUtil.js":"39","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\constants.js":"40","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\modalActions.js":"41","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\helpers.js":"42","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\productActions.js":"43","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\modalReducer.js":"44","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\asyncActions.jsx":"45","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\asyncReducer.js":"46","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\loader.js":"47","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\productsReducer.js":"48","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\signedInMenu.js":"49","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Profile\\index.js":"50","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\hoc\\index.js":"51","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Header\\index.js":"52","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\userActions.js":"53","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\ModalManager.jsx":"54","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\product\\index.js":"55","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Product\\index.js":"56","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\textCollapse.js":"57","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\prodImg.js":"58","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\cart\\index.js":"59","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\querys\\index.js":"60","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cartProduct.js":"61","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cartInput.js":"62","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Cart\\index.js":"63","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\mobile\\menu.js":"64","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\mobile\\filter.js":"65","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Addresses\\index.js":"66","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Wallet\\index.js":"67","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\WishList\\index.js":"68"},{"size":500,"mtime":1612394628504,"results":"69","hashOfConfig":"70"},{"size":1183,"mtime":1612573736164,"results":"71","hashOfConfig":"70"},{"size":362,"mtime":499162500000,"results":"72","hashOfConfig":"70"},{"size":1931,"mtime":1615809493650,"results":"73","hashOfConfig":"70"},{"size":2019,"mtime":1615718047647,"results":"74","hashOfConfig":"70"},{"size":8358,"mtime":1615645239951,"results":"75","hashOfConfig":"70"},{"size":2960,"mtime":1615810928074,"results":"76","hashOfConfig":"70"},{"size":2165,"mtime":1611199413186,"results":"77","hashOfConfig":"70"},{"size":763,"mtime":1610208872018,"results":"78","hashOfConfig":"70"},{"size":951,"mtime":1610208889830,"results":"79","hashOfConfig":"70"},{"size":7889,"mtime":1615653094636,"results":"80","hashOfConfig":"70"},{"size":821,"mtime":1615615848243,"results":"81","hashOfConfig":"70"},{"size":906,"mtime":1611192877942,"results":"82","hashOfConfig":"70"},{"size":5110,"mtime":1615617234505,"results":"83","hashOfConfig":"70"},{"size":994,"mtime":1610726448945,"results":"84","hashOfConfig":"70"},{"size":1253,"mtime":1610726536631,"results":"85","hashOfConfig":"70"},{"size":1369,"mtime":1610726707974,"results":"86","hashOfConfig":"70"},{"size":1920,"mtime":1610653414770,"results":"87","hashOfConfig":"70"},{"size":2806,"mtime":1615592730280,"results":"88","hashOfConfig":"70"},{"size":1886,"mtime":1611151366051,"results":"89","hashOfConfig":"70"},{"size":340,"mtime":1613928510347,"results":"90","hashOfConfig":"70"},{"size":228,"mtime":1610548087471,"results":"91","hashOfConfig":"70"},{"size":307,"mtime":1610547764991,"results":"92","hashOfConfig":"70"},{"size":339,"mtime":1615617265633,"results":"93","hashOfConfig":"70"},{"size":4107,"mtime":1612119983039,"results":"94","hashOfConfig":"70"},{"size":523,"mtime":1610547763928,"results":"95","hashOfConfig":"70"},{"size":745,"mtime":1610548322828,"results":"96","hashOfConfig":"70"},{"size":1019,"mtime":1611520093069,"results":"97","hashOfConfig":"70"},{"size":2990,"mtime":1615639232147,"results":"98","hashOfConfig":"70"},{"size":2039,"mtime":1615642822736,"results":"99","hashOfConfig":"70"},{"size":2119,"mtime":1615642708892,"results":"100","hashOfConfig":"70"},{"size":268,"mtime":1610547896814,"results":"101","hashOfConfig":"70"},{"size":10310,"mtime":1611379195935,"results":"102","hashOfConfig":"70"},{"size":2275,"mtime":1611064587633,"results":"103","hashOfConfig":"70"},{"size":1996,"mtime":1611449226465,"results":"104","hashOfConfig":"70"},{"size":629,"mtime":1612573736181,"results":"105","hashOfConfig":"70"},{"size":1354,"mtime":1612610605493,"results":"106","hashOfConfig":"70"},{"size":598,"mtime":1610812205086,"results":"107","hashOfConfig":"70"},{"size":207,"mtime":1610710149191,"results":"108","hashOfConfig":"70"},{"size":404,"mtime":1612208438402,"results":"109","hashOfConfig":"70"},{"size":302,"mtime":1610735163205,"results":"110","hashOfConfig":"70"},{"size":477,"mtime":1610905175882,"results":"111","hashOfConfig":"70"},{"size":6542,"mtime":1610929454299,"results":"112","hashOfConfig":"70"},{"size":450,"mtime":1610795898268,"results":"113","hashOfConfig":"70"},{"size":353,"mtime":1610797125871,"results":"114","hashOfConfig":"70"},{"size":634,"mtime":1610797184913,"results":"115","hashOfConfig":"70"},{"size":349,"mtime":1610916841652,"results":"116","hashOfConfig":"70"},{"size":798,"mtime":1612216401332,"results":"117","hashOfConfig":"70"},{"size":2378,"mtime":1611210561157,"results":"118","hashOfConfig":"70"},{"size":9374,"mtime":1615594739567,"results":"119","hashOfConfig":"70"},{"size":299,"mtime":1615651254604,"results":"120","hashOfConfig":"70"},{"size":1681,"mtime":1615809398670,"results":"121","hashOfConfig":"70"},{"size":9709,"mtime":1615577961190,"results":"122","hashOfConfig":"70"},{"size":809,"mtime":1615623455044,"results":"123","hashOfConfig":"70"},{"size":3108,"mtime":1615593862305,"results":"124","hashOfConfig":"70"},{"size":9846,"mtime":1615645107088,"results":"125","hashOfConfig":"70"},{"size":1498,"mtime":1611369993566,"results":"126","hashOfConfig":"70"},{"size":2840,"mtime":1611525481990,"results":"127","hashOfConfig":"70"},{"size":5772,"mtime":1615810949308,"results":"128","hashOfConfig":"70"},{"size":661,"mtime":1615578075455,"results":"129","hashOfConfig":"70"},{"size":1133,"mtime":1612118059290,"results":"130","hashOfConfig":"70"},{"size":1604,"mtime":1611520423862,"results":"131","hashOfConfig":"70"},{"size":5937,"mtime":1615810518072,"results":"132","hashOfConfig":"70"},{"size":1369,"mtime":1615665743494,"results":"133","hashOfConfig":"70"},{"size":2765,"mtime":1615643183901,"results":"134","hashOfConfig":"70"},{"size":322,"mtime":1615809678865,"results":"135","hashOfConfig":"70"},{"size":322,"mtime":1615809665239,"results":"136","hashOfConfig":"70"},{"size":322,"mtime":1615809673648,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"snigi0",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"140"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"140"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"140"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"140"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"140"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"140"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"140"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\index.js",[],["292","293"],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\App.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reportWebVitals.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\routes.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\hoc\\layout.js",["294"],"import React, { useEffect } from \"react\";\r\nimport AuthHeader from \"../Header-Footer/Header/authHeader\";\r\nimport Header from \"../Header-Footer/Header\";\r\nimport Message from \"../../components/util/message\";\r\nimport Footer from \"../Header-Footer/Footer\";\r\nimport { connect } from \"react-redux\";\r\nimport { openModal, closeModal } from \"../../actions/modalActions\";\r\nimport ModalManager from \"../Models/ModalManager\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction Layout(props) {\r\n  // const [model, setModel] = useState(false);\r\n\r\n  // const openCloseModel = (value) => {\r\n  //   setModel(value);\r\n  // };\r\n  const matchesMobile = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  useEffect(() => {\r\n    if (\r\n      matchesMobile &&\r\n      props.currentModal &&\r\n      props.currentModal.modalType === \"Filter\"\r\n    )\r\n      props.closeModal();\r\n  }, [matchesMobile]);\r\n\r\n  const display =\r\n    props.currentModal &&\r\n    (props.currentModal.modalType === \"AuthModel\" ||\r\n      props.currentModal.modalType === \"Menu\" ||\r\n      props.currentModal.modalType === \"Filter\")\r\n      ? \"none\"\r\n      : \"block\";\r\n\r\n  return (\r\n    <div className=\"layout-hoc\">\r\n      {/* {props.currentModal && props.currentModal.modalType === \"AuthModel\" ? (\r\n        <AuthModel closeModal={props.closeModal} />\r\n      ) : (\r\n        <> */}\r\n      <AuthHeader matchesMobile={matchesMobile} closeModal={props.closeModal} openModal={props.openModal} />\r\n      <Header role={props.role} />\r\n      {<ModalManager closeModal={props.closeModal} />}\r\n      <div style={{ display: display }}>{props.children}</div>\r\n      <div style={{ display: display }}>\r\n        <Message />\r\n      </div>\r\n      <div style={{ display: display }}>\r\n        <Footer />\r\n      </div>\r\n      {/* </>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  currentModal: state.modals,\r\n  role: state.firebase.profile.role,\r\n});\r\n\r\nconst actions = {\r\n  openModal,\r\n  closeModal,\r\n};\r\n\r\nexport default connect(mapState, actions)(Layout);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Home\\index.js",["295","296","297"],"import React, { useEffect, useState } from \"react\";\r\nimport ProductCard from \"../../components/util/cards/productCard\";\r\n\r\nimport img2 from \"../../util/images/img2.jpeg\";\r\nimport img4 from \"../../util/images/img4.jpeg\";\r\n\r\nimport img5 from \"../../util/images/img5.jpeg\";\r\nimport img6 from \"../../util/images/img6.jpeg\";\r\nimport img7 from \"../../util/images/img7.jpeg\";\r\n\r\nimport img14 from \"../../util/images/img14.jpeg\";\r\nimport img15 from \"../../util/images/img15.jpeg\";\r\nimport img16 from \"../../util/images/img16.jpeg\";\r\nimport img17 from \"../../util/images/img17.jpeg\";\r\nimport img18 from \"../../util/images/img18.jpeg\";\r\n\r\nimport Loader from \"../../components/util/loader\";\r\nimport product from \"../../util/images/product.png\";\r\nimport back from \"../../util/images/back.png\";\r\nimport next from \"../../util/images/next.png\";\r\nimport Slider from \"react-slick\";\r\nimport AboutCard from \"../../components/util/cards/aboutCard\";\r\nimport Button from \"../../components/util/button\";\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProductsForHome } from \"../../actions/productActions\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport {\r\n  LazyLoadComponent,\r\n  LazyLoadImage,\r\n} from \"react-lazy-load-image-component\";\r\nimport { openModal, closeModal } from \"../../actions/modalActions\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction Home(props) {\r\n  const matchesMd = useMediaQuery(\"(max-width:1100px)\");\r\n  const matchesSm = useMediaQuery(\"(max-width:870px)\");\r\n  const matchesMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  useEffect(() => {\r\n    \r\n    if(matchesMobile && config.slidesToShow !== 1)\r\n    setConfig({ ...config, slidesToShow: 1,slidesToScroll:1 });\r\n    else if(matchesSm && config.slidesToShow !== 2)\r\n    setConfig({ ...config, slidesToShow: 2,slidesToScroll:2 });\r\n    else if (matchesMd && config.slidesToShow !== 3)\r\n      setConfig({ ...config, slidesToShow: 3,slidesToScroll:2 });\r\n    else if (!matchesMd && config.slidesToShow !== 4)\r\n      setConfig({ ...config, slidesToShow: 4,slidesToScroll:2 });\r\n  }, [matchesMd,matchesSm,matchesMobile]);\r\n\r\n  const ArrowLeft = ({ currentSlide, slideCount, ...props }) => (\r\n    <img\r\n      {...props}\r\n      aria-hidden=\"true\"\r\n      aria-disabled={currentSlide === 0 ? true : false}\r\n      className={\r\n        \"slick-prev slick-arrow\" + (currentSlide === 0 ? \" slick-disabled\" : \"\")\r\n      }\r\n      alt=\"\"\r\n      src={back}\r\n    />\r\n  );\r\n  const ArrowRight = ({ currentSlide, slideCount, ...props }) => (\r\n    <img\r\n      size=\"30px\"\r\n      {...props}\r\n      className={\r\n        \"slick-next slick-arrow\" +\r\n        (currentSlide === slideCount - 1 ? \" slick-disabled\" : \"\")\r\n      }\r\n      aria-hidden=\"true\"\r\n      aria-disabled={currentSlide === slideCount - 1 ? true : false}\r\n      color=\"black\"\r\n      alt=\"\"\r\n      src={next}\r\n    />\r\n  );\r\n  const [config, setConfig] = useState({\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 2,\r\n    prevArrow: <ArrowLeft />,\r\n    nextArrow: <ArrowRight />,\r\n\r\n    rows: 1,\r\n  });\r\n\r\n  const viewProduct = (id) => {\r\n    props.history.push({\r\n      pathname: \"/product/\" + id,\r\n      state: { collection: \"Best Sellers\" },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.getProductsForHome();\r\n  }, []);\r\n\r\n  const aboutCards = [\r\n    {\r\n      title: \"Family Owned\",\r\n      text: \"BRAND\",\r\n      to: \"/\",\r\n      linkText: \"Read our story\",\r\n      background: img5,\r\n    },\r\n    {\r\n      title: \"Hand Crafted\",\r\n      text: \"PRODUCTS\",\r\n      to: \"/\",\r\n      linkText: \"About our leather\",\r\n      background: img6,\r\n    },\r\n    {\r\n      title: \"Created in the\",\r\n      text: \"USA\",\r\n      to: \"/\",\r\n      linkText: \"learn our process\",\r\n      background: img7,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <section className=\"main-section\">\r\n        <div className=\"black-shadow\"></div>\r\n        <ReactCSSTransitionGroup\r\n          transitionAppear={true}\r\n          transitionAppearTimeout={600}\r\n          transitionEnterTimeout={200}\r\n          transitionLeaveTimeout={200}\r\n          transitionName=\"SlideOut\"\r\n        >\r\n          <div className=\"title\">CUE THE COLOR</div>\r\n          <Button onClick={()=>props.history.push(\"shop\")} title=\"Shop the collection\" type=\"btn-v1\" />\r\n        </ReactCSSTransitionGroup>\r\n      </section>\r\n      <div className=\"best-sell-products\">\r\n        <div className=\"title\">BEST SELLERS</div>\r\n        {props.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <div className=\"dash\" />\r\n            <div className=\"slider\">\r\n              <LazyLoadComponent key={product.id}>\r\n                <Slider {...config}>\r\n                  {props.products.length > 0\r\n                    ? props.products.map((product) => (\r\n                        <ProductCard\r\n                          openModal={props.openModal}\r\n                          closeModal={props.closeModal}\r\n                          key={product.id}\r\n                          product={product}\r\n                          viewProduct={() => viewProduct(product.id)}\r\n                        />\r\n                      ))\r\n                    : \"\"}\r\n                </Slider>\r\n              </LazyLoadComponent>\r\n            </div>\r\n\r\n            <Button onClick={()=>props.history.push(\"shop\")} title=\"Shop All Bags\" type=\"btn-main\" />\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"features\">\r\n        <div className=\"feature img-feature\">\r\n          {/* <LazyLoadImage src={img2}></LazyLoadImage> */}\r\n          <img src={img2} alt=\"\" />\r\n          <div>\r\n            <button className=\"label-btn\">Add to Cart</button>\r\n            <div className=\"product-card__footer\">\r\n              <div className=\"name\">i'm a product</div>\r\n              <div className=\"price\">$100.00</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"feature feature__two\">\r\n          <div className=\"black-shadow\"></div>\r\n          <div className=\"title\"> MINI LEATHER GOODS</div>\r\n        </div>\r\n        <div className=\"feature feature__three\">\r\n          <div className=\"black-shadow\"></div>\r\n          <div className=\"title\">LEATHER BELTS</div>\r\n        </div>\r\n        <div className=\"feature img-feature feature__four\">\r\n          {/* <LazyLoadImage src={img4}></LazyLoadImage> */}\r\n          <img src={img4} alt=\"\" />\r\n          <div>\r\n            <button className=\"label-btn\">Add to Cart</button>\r\n            <div className=\"product-card__footer\">\r\n              <div className=\"name\">i'm a product</div>\r\n              <div className=\"price\">$50.00</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"about-us\">\r\n        {aboutCards.map((card) => (\r\n          <LazyLoadComponent key={card.title}>\r\n            <AboutCard key={card.title} card={card} />\r\n          </LazyLoadComponent>\r\n        ))}\r\n      </div>\r\n      <div className=\"shopping-info\">\r\n        <div>\r\n          <h2>FOLLOW</h2>\r\n          <h3>ADALENE ON INSTAGRAM</h3>\r\n          <span>@adaleneshop</span>\r\n\r\n          <div className=\"photos\">\r\n            <img src={img14} alt=\"\"></img>\r\n            <img src={img16} alt=\"\"></img>\r\n            <img src={img17} alt=\"\"></img>\r\n            <img src={img15} alt=\"\"></img>\r\n            <img src={img18} alt=\"\"></img>\r\n          </div>\r\n          <img className=\"mobileImg\" src={img14} alt=\"\"></img>\r\n\r\n          <div className=\"desc\">\r\n            <div>\r\n              <div className=\"dash\" />\r\n              <div className=\"title\">Worldwide shipping</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"dash\" />\r\n              <div className=\"title\">Easy 30 day returns</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"dash\" />\r\n              <div className=\"title\">12 month warranty</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products,\r\n  loading: state.async.loading,\r\n});\r\n\r\nconst actions = {\r\n  openModal,\r\n  closeModal,\r\n  getProductsForHome,\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Home);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Header\\authHeader.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Header\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Footer\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Header-Footer\\Footer\\item.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Shop\\index.js",["298","299","300"],"import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nimport ProductCard from \"../../components/util/cards/productCard\";\r\nimport CollapseCheckbox from \"../../components/util/collapse/collapseCheckbox\";\r\nimport PriceCollapse from \"../../components/util/collapse/priceCollapse\";\r\nimport ListCollapse from \"../../components/util/collapse/listCollapse\";\r\nimport Button from \"../../components/util/button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProductsForShop,\r\n  filterProducts,\r\n  loadMore,\r\n} from \"../../actions/productActions\";\r\nimport Loader from \"../../components/util/loader\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport { openModal, closeModal } from \"../../actions/modalActions\";\r\n\r\nfunction Shop(props) {\r\n  const [filters, setFilters] = useState({\r\n    model: [],\r\n    price: [],\r\n    collection: \"All\",\r\n  });\r\n  const [loadMoreProducts, setLoadMoreProducts] = useState(false);\r\n  const [loadMoreLoading, setLoadMoreLoading] = useState(false);\r\n  const [pagination, setPagination] = useState(\"\");\r\n  const [disableLoadBtn, setDisableLoadBtn] = useState(false);\r\n  const [loadedProducts, setLoadedProducts] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchPagination() {\r\n      const res = await props.getProductsForShop();\r\n      setPagination(res.lastRef);\r\n      setDisableLoadBtn(res.disableLoadBtn);\r\n    }\r\n    fetchPagination();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadMoreProducts) {\r\n      setLoadedProducts([...loadedProducts, ...props.products]);\r\n      setLoadMoreProducts(false);\r\n      setLoadMoreLoading(false);\r\n    }\r\n  }, [loadMoreProducts]);\r\n\r\n  useMemo(() => {\r\n    if (props.products.length === 0 && !props.loading) setLoadedProducts([]);\r\n    else if (!props.loading) setLoadedProducts([...props.products]);\r\n  }, [props.loading]);\r\n\r\n  const loadMore = async () => {\r\n    setLoadMoreLoading(true);\r\n    const res = await props.loadMore(pagination, filters);\r\n    setPagination(res.lastRef);\r\n    setDisableLoadBtn(res.disableLoadBtn);\r\n    setLoadMoreProducts(true);\r\n  };\r\n\r\n  const models = {\r\n    All: [\r\n      { id: \"iPhone X\", name: \"iPhone X\" },\r\n      { id: \"iPhone XS\", name: \"iPhone XS\" },\r\n      { id: \"Shoulder bag\", name: \"Shoulder bag\" },\r\n      { id: \"Cross body\", name: \"Cross body\" },\r\n      { id: \"Shopper Tote\", name: \"Shopper Tote\" },\r\n      { id: \"Full Grain\", name: \"Full Grain\" },\r\n      { id: \"Corrected Grain\", name: \"Corrected Grain\" },\r\n      { id: \"Split\", name: \"Split\" },\r\n    ],\r\n    phoneCases: [\r\n      { id: \"iPhone X\", name: \"iPhone X\" },\r\n      { id: \"iPhone XS\", name: \"iPhone XS\" },\r\n    ],\r\n    miniLeatherGoods: [\r\n      { id: \"Shoulder bag\", name: \"Shoulder bag\" },\r\n      { id: \"Cross body\", name: \"Cross body\" },\r\n      { id: \"Shopper Tote\", name: \"Shopper Tote\" },\r\n    ],\r\n    leatherBelts: [\r\n      { id: \"Full Grain\", name: \"Full Grain\" },\r\n      { id: \"Corrected Grain\", name: \"Corrected Grain\" },\r\n      { id: \"Split\", name: \"Split\" },\r\n    ],\r\n  };\r\n\r\n  const [selectedModels, setSelectedModels] = useState(models[\"All\"]);\r\n\r\n  const collections = [\r\n    { id: \"All\", name: \"All\" },\r\n    { id: \"phoneCases\", name: \"Phone Cases\" },\r\n    { id: \"miniLeatherGoods\", name: \"Mini leather goods\" },\r\n    { id: \"leatherBelts\", name: \"Leather Belts\" },\r\n    { id: \"bestSeller\", name: \"Best Sellers\" },\r\n  ];\r\n\r\n  const viewProduct = (id) => {\r\n    props.history.push({\r\n      pathname: \"/product/\" + id,\r\n      state: {\r\n        collection: filters.collection,\r\n        model: filters.model,\r\n        price: filters.price,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleFilters = async (newData, category, collection) => {\r\n    const newFilters = { ...filters };\r\n    if (category === \"collection\") {\r\n      if (collection === \"bestSeller\") setSelectedModels(models[\"All\"]);\r\n      else setSelectedModels(models[collection]);\r\n\r\n      newFilters[category] = newData;\r\n\r\n      newFilters[\"model\"] = [];\r\n      setFilters(newFilters);\r\n    } else {\r\n      newFilters[category] = newData;\r\n\r\n      setFilters(newFilters);\r\n    }\r\n    // setClearProducts(true);\r\n    if (category !== \"price\") {\r\n      const res = await props.filterProducts(newFilters);\r\n      setPagination(res.lastRef);\r\n      setDisableLoadBtn(res.disableLoadBtn);\r\n    }\r\n  };\r\n\r\n  const applyFilters = async (filters) => {\r\n    setFilters({ ...filters });\r\n    const res = await props.filterProducts(filters);\r\n    setPagination(res.lastRef);\r\n    setDisableLoadBtn(res.disableLoadBtn);\r\n  };\r\n\r\n  const sliderOnChangeCommitted = async () => {\r\n    const res = await props.filterProducts(filters);\r\n    setPagination(res.lastRef);\r\n    setDisableLoadBtn(res.disableLoadBtn);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ReactCSSTransitionGroup\r\n        transitionAppear={true}\r\n        transitionAppearTimeout={600}\r\n        transitionEnterTimeout={600}\r\n        transitionLeaveTimeout={200}\r\n        transitionName=\"SlideOut\"\r\n      >\r\n        <div className=\"main-title\">SHOP ALL</div>\r\n      </ReactCSSTransitionGroup>\r\n      <div className=\"filter-btn\">\r\n        <Button\r\n          onClick={() =>\r\n            props.openModal(\"Filter\", {\r\n              collections,\r\n              selectedModels,\r\n              filters,\r\n              models,\r\n              applyFilters: applyFilters,\r\n            })\r\n          }\r\n          title=\"Filter\"\r\n          type=\"btn-load\"\r\n          color=\"primary\"\r\n          size=\"20px\"\r\n        />\r\n      </div>\r\n      <div className=\"shop\">\r\n        {!props.loading && (\r\n          <div className=\"left\">\r\n            <div className=\"title\">Filter by</div>\r\n            <div className=\"dash\"></div>\r\n            <ListCollapse\r\n              handleFilters={(filters, collection) =>\r\n                handleFilters(filters, \"collection\", collection)\r\n              }\r\n              initState={true}\r\n              list={collections}\r\n              title=\"Collection\"\r\n            />\r\n            <PriceCollapse\r\n              handleFilters={(filters) => handleFilters(filters, \"price\")}\r\n              initState={false}\r\n              title=\"Price\"\r\n              sliderBlur={sliderOnChangeCommitted}\r\n            />\r\n\r\n            <CollapseCheckbox\r\n              initState={false}\r\n              title=\"Model\"\r\n              collection={filters.collection}\r\n              list={selectedModels}\r\n              handleFilters={(filters) => handleFilters(filters, \"model\")}\r\n            />\r\n          </div>\r\n        )}\r\n        {props.loading ? (\r\n          <>\r\n            <Loader />\r\n          </>\r\n        ) : (\r\n          <div className=\"products\">\r\n            {loadedProducts.length > 0 ? (\r\n              <>\r\n                {loadedProducts.map((product) => (\r\n                  <ProductCard\r\n                    openModal={props.openModal}\r\n                    closeModal={props.closeModal}\r\n                    key={product.id}\r\n                    product={product}\r\n                    viewProduct={() => viewProduct(product.id)}\r\n                  />\r\n                ))}\r\n                <div className=\"load-more\">\r\n                  <Button\r\n                    disabled={disableLoadBtn}\r\n                    onClick={loadMore}\r\n                    title=\"Load More\"\r\n                    type=\"btn-load\"\r\n                    color=\"primary\"\r\n                    size=\"20px\"\r\n                    loading={loadMoreLoading}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-products\">No Products</div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst actions = {\r\n  getProductsForShop,\r\n  filterProducts,\r\n  loadMore,\r\n  openModal,\r\n  closeModal,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products,\r\n  loading: state.async.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(Shop);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\OurStory\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\OurCraft\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Contact\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\login.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\signup.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\auth\\oauthWithEmail.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\form\\formfield.js",["301","302"],"import React from \"react\";\r\n\r\nconst Formfield = ({ formdata, change, id }) => {\r\n  const showError = () => {\r\n    let errorMessage = null;\r\n\r\n    if (formdata.validation && !formdata.valid) {\r\n      errorMessage = (\r\n        <div className=\"error_label\">{formdata.validationMessage}</div>\r\n      );\r\n    }\r\n\r\n    return errorMessage;\r\n  };\r\n\r\n  const renderTemplate = () => {\r\n    let formTemplate = null;\r\n\r\n    switch (formdata.element) {\r\n      case \"input\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formdata.showlabel ? (\r\n              <div style={{ marginTop: \"5px\" }} className=\"label_inputs\">\r\n                {formdata.config.label}\r\n              </div>\r\n            ) : null}\r\n            <input\r\n              {...formdata.config}\r\n              value={formdata.value}\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              onChange={(event) => change({ event, id })}\r\n            />\r\n            {showError()}\r\n          </div>\r\n        );\r\n        break;\r\n      case \"select\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formdata.showlabel ? (\r\n              <div className=\"label_inputs\">{formdata.config.label}</div>\r\n            ) : null}\r\n            <select\r\n              value={formdata.value}\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              onChange={(event) => change({ event, id })}\r\n            >\r\n              <option value=\"\">Select one</option>\r\n              {formdata.config.options.map((item, i) => (\r\n                <option  key={item.key} name={item.key}  value={item.value}>\r\n                  {!formdata.bool\r\n                    ? item.value\r\n                    : formdata.config.name === \"publish_input\"\r\n                    ? i == 0\r\n                      ? \"Public\"\r\n                      : \"Hidden\"\r\n                    : i == 0\r\n                    ? \"Yes\"\r\n                    : \"No\"}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {showError()}\r\n          </div>\r\n        );\r\n        break;\r\n      case \"textarea\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formdata.showlabel ? (\r\n              <div className=\"label_inputs\">{formdata.config.label}</div>\r\n            ) : null}\r\n            <textarea\r\n              {...formdata.config}\r\n              value={formdata.value}\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              onChange={(event) => change({ event, id })}\r\n            />\r\n            {showError()}\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        formTemplate = null;\r\n    }\r\n\r\n    return formTemplate;\r\n  };\r\n\r\n  return <>{renderTemplate()}</>;\r\n};\r\n\r\nexport default Formfield;\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\form\\formActions.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\identityProviderList.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\dashTitle.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\contactCardList.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\contactCard.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\button.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\aboutCard.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\aboutUsCard.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cards\\productCard.js",["303"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function ProductCard(props) {\r\n  const product = props.product;\r\n\r\n  return (\r\n    <div className=\"product-card\">\r\n      <div className=\"image-container\">\r\n        {product.quantity ? (\r\n          product.bestSeller && (\r\n            <div className=\"best-sell__label\">Best Seller</div>\r\n          )\r\n        ) : (\r\n          <div className=\"out__label\">Out of stock</div>\r\n        )}\r\n\r\n        <img onClick={props.viewProduct} src={product.mainImage} alt=\"\" />\r\n\r\n        <div\r\n          onClick={() =>\r\n            props.openModal(\"ProductModel\", {\r\n              product: product,\r\n              viewProduct: props.viewProduct,\r\n              closeModal: props.closeModal,\r\n            })\r\n          }\r\n          className=\"quick-view\"\r\n        >\r\n          Quick View\r\n        </div>\r\n      </div>\r\n      <div className=\"name\">{product.productName}</div>\r\n      <div className=\"price\">{product.price}$</div>\r\n    </div>\r\n  );\r\n}\r\n",["304","305"],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\collapseCheckbox.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\priceCollapse.js",["306"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { GoPlusSmall as Plus } from \"react-icons/go\";\r\nimport { BiMinus as Minus } from \"react-icons/bi\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nfunction valuetext(value) {\r\n  return `${value}$`;\r\n}\r\n\r\nexport default function PriceCollapse(props) {\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (props.initState) {\r\n      setOpen(true);\r\n    }\r\n    if (props.init && props.init.length > 0) {\r\n      setPrice(props.init);\r\n    }\r\n  }, [props.init]);\r\n  const [price, setPrice] = React.useState([0, 500]);\r\n  const handleChange = (event, newValue) => {\r\n    setPrice(newValue);\r\n    props.handleFilters(newValue);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleAngle = () =>\r\n    open ? <Minus size=\"18px\" /> : <Plus size=\"25px\" />;\r\n\r\n  return (\r\n    <div className=\"collapse_items_wrapper\">\r\n      <List style={{ borderBottom: \"1px solid #dbdbdb\" }}>\r\n        <ListItem onClick={handleClick} style={{ padding: \"10px 23px 10px 0\" }}>\r\n          <ListItemText primary={props.title} className=\"collapse_title\" />\r\n          {handleAngle()}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <Slider\r\n            min={0}\r\n            step={50}\r\n            max={500}\r\n            value={price}\r\n            onChange={handleChange}\r\n            onChangeCommitted={props.sliderBlur}\r\n            aria-labelledby=\"range-slider\"\r\n            getAriaValueText={valuetext}\r\n            valueLabelFormat={valuetext}\r\n            valueLabelDisplay=\"auto\"\r\n          />\r\n          <div className=\"price-values\">\r\n            <span>${price[0]}.00</span>\r\n            <span>${price[1]}.00</span>\r\n          </div>\r\n        </Collapse>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\listCollapse.js",["307"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { GoPlusSmall as Plus } from \"react-icons/go\";\r\nimport { BiMinus as Minus } from \"react-icons/bi\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nexport default function ListCollapse(props) {\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (props.initState) {\r\n      setOpen(true);\r\n\r\n    }\r\n    if(props.init && props.init.length > 0){\r\n      setSelectedCollection(props.init)\r\n    }\r\n  }, [props.init]);\r\n\r\n  const [selectedCollection, setSelectedCollection] = useState(\"All\");\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleAngle = () =>\r\n    open ? <Minus size=\"18px\" /> : <Plus size=\"25px\" />;\r\n\r\n  const handleOnClickItem = (value,collection) => {\r\n    setSelectedCollection(value);\r\n    props.handleFilters(value,collection)\r\n  };\r\n  const renderList = () =>\r\n    props.list\r\n      ? props.list.map((value) => (\r\n          <ListItem key={value.id} style={{ padding: \"0 0\" }}>\r\n            <ListItemText\r\n              className=\"collection-item__filter\"\r\n              style={{\r\n                fontWeight: `${\r\n                  value.name === selectedCollection ? \"700\" : \"200\"\r\n                }`,\r\n              }}\r\n              onClick={() => handleOnClickItem(value.name,value.id)}\r\n              primary={value.name}\r\n            />\r\n          </ListItem>\r\n        ))\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"collapse_items_wrapper\">\r\n      <List style={{ borderBottom: \"1px solid #dbdbdb\" }}>\r\n        <ListItem onClick={handleClick} style={{ padding: \"10px 23px 10px 0\" }}>\r\n          <ListItemText primary={props.title} className=\"collapse_title\" />\r\n          {handleAngle()}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {renderList()}\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\message\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Admin\\add_product.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\form\\fileupload.js",["308","309"],"import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nimport { BsPlusCircle as PlusCircle } from \"react-icons/bs\";\r\nimport { AiOutlineCloseCircle as Close } from \"react-icons/ai\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass Fileupload extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      uploadedFiles: [],\r\n      uploading: false,\r\n    };\r\n  }\r\n\r\n  onDrop = (files) => {\r\n    \r\n    const uploadedFiles = [...this.state.uploadedFiles, files[0]];\r\n    this.setState({ uploading: true, uploadedFiles }, () => {\r\n      this.props.imagesHandler(uploadedFiles);\r\n    });\r\n  };\r\n\r\n  onRemove = (index) => {\r\n    const uploadedFiles = [...this.state.uploadedFiles];\r\n    uploadedFiles.splice(index, 1);\r\n    this.setState({ uploadedFiles }, () => {\r\n      this.props.imagesHandler(uploadedFiles);\r\n    });\r\n  };\r\n\r\n  showUploadedImages = () =>\r\n    this.state.uploadedFiles.map((item, i) => (\r\n      <div className=\"dropzone_box\" key={item.preview}>\r\n        <Close\r\n          onClick={() => this.onRemove(i)}\r\n          color=\"#212121\"\r\n          className=\"close\"\r\n          size=\"30px\"\r\n        />\r\n\r\n        <div\r\n          className=\"wrap\"\r\n          style={{ background: `url(${item.preview}) no-repeat` }}\r\n        ></div>\r\n      </div>\r\n    ));\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section>\r\n          <div className=\"dropzone clear\">\r\n            <Dropzone\r\n              onDrop={(e) => this.onDrop(e)}\r\n              multiple={false}\r\n              className=\"dropzone_box\"\r\n            >\r\n              <div className=\"wrap\">\r\n                <PlusCircle size=\"40px\" />\r\n              </div>\r\n            </Dropzone>\r\n            {this.showUploadedImages()}\r\n            {this.state.uploading ? (\r\n              <div\r\n                className=\"dropzone_box\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  paddingTop: \"60px\",\r\n                }}\r\n              >\r\n                {/* <CircularProgress style={{ color: \"#00bcd4\" }} thickness={7} /> */}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fileupload;\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\auth.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\firebase.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\store.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\reducerUtil.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\constants.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\modalActions.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\helpers.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\productActions.js",["310"],"import { createNewProduct } from \"../components/util/helpers\";\r\nimport cuid from \"cuid\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport {\r\n  asyncActionStart,\r\n  asyncActionFinish,\r\n  asyncActionError,\r\n} from \"./asyncActions\";\r\n\r\nimport { FETCH_PRODUCTS, CREATE_PRODUCT } from \"./constants\";\r\n\r\nexport const createProduct = (product) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firebase = getFirebase();\r\n  const firestore = getFirestore();\r\n  dispatch(asyncActionStart());\r\n\r\n  try {\r\n    const images = {};\r\n\r\n    let mainImage = null;\r\n    // Create a root reference\r\n    const storageRef = firebase.storage().ref();\r\n\r\n    for (let file of product.images) {\r\n      const imageName = cuid();\r\n\r\n      const path = `${product.collection}/${imageName}`;\r\n      const ref = storageRef.child(path);\r\n\r\n      const data = await ref.put(file);\r\n      const downloadURL = await data.ref.getDownloadURL();\r\n\r\n      if (!mainImage) {\r\n        mainImage = downloadURL;\r\n      }\r\n      images[imageName] = downloadURL;\r\n    }\r\n\r\n    const newProduct = createNewProduct(product, images, mainImage);\r\n\r\n    firestore\r\n      .collection(\"products\")\r\n      .add(newProduct)\r\n      .then(function (docRef) {\r\n        toastr.success(\"Success\", \"product has been created\");\r\n        dispatch(asyncActionFinish());\r\n      })\r\n      .catch(function (error) {\r\n        dispatch(asyncActionError());\r\n\r\n        toastr.error(\"Oops\", \"Something went wrong\");\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const loadMore = (lastRef, filters) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n  let lastDoc = \"\";\r\n  const products = [];\r\n\r\n  if (lastRef === \"\") return { lastRef: \"lastDoc\", disableLoadBtn: true };\r\n\r\n  try {\r\n    const collectionRef = firestore.collection(\"products\");\r\n    let query = collectionRef;\r\n    let startAfter = await firestore.collection(\"products\").doc(lastRef).get();\r\n\r\n    if (filters.collection !== \"All\" && filters.collection !== \"Best Sellers\")\r\n      query = query.where(\"collection\", \"==\", filters.collection);\r\n    if (filters.collection === \"Best Sellers\")\r\n      query = query.where(\"bestSeller\", \"==\", true);\r\n\r\n    if (filters[\"model\"].length > 0)\r\n      query = query.where(\"modelName\", \"in\", filters[\"model\"]);\r\n    if (filters[\"price\"].length > 0) {\r\n      query = query.where(\"price\", \">=\", filters[\"price\"][0]);\r\n      query = query.where(\"price\", \"<=\", filters[\"price\"][1]);\r\n    }\r\n\r\n    query = query.startAfter(startAfter).limit(8);\r\n\r\n    const querySnap = await query.get();\r\n    const length = querySnap.docs.length;\r\n    if (length !== 0) lastDoc = querySnap.docs[length - 1].id;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const product = {\r\n        id: querySnap.docs[i].id,\r\n        ...querySnap.docs[i].data(),\r\n      };\r\n      products.push(product);\r\n    }\r\n\r\n    dispatch({ type: FETCH_PRODUCTS, payload: { products } });\r\n\r\n    return { lastRef: lastDoc, disableLoadBtn: length < 8 };\r\n  } catch (error) {\r\n    dispatch(asyncActionError());\r\n    console.log(error);\r\n    toastr.error(\"Oops\", \"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const getProductsForShop = () => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n  let lastRef = \"\";\r\n\r\n  try {\r\n    dispatch(asyncActionStart());\r\n\r\n    const products = [];\r\n\r\n    const collectionRef = firestore.collection(\"products\");\r\n    let query = collectionRef.limit(8);\r\n\r\n    const querySnap = await query.get();\r\n    const length = querySnap.docs.length;\r\n    lastRef = querySnap.docs[length - 1].id;\r\n    for (let i = 0; i < length; i++) {\r\n      const product = {\r\n        id: querySnap.docs[i].id,\r\n        ...querySnap.docs[i].data(),\r\n      };\r\n      products.push(product);\r\n    }\r\n\r\n    dispatch({ type: FETCH_PRODUCTS, payload: { products } });\r\n    dispatch(asyncActionFinish());\r\n\r\n    return { lastRef, disableLoadBtn: length < 8 };\r\n  } catch (error) {\r\n    dispatch(asyncActionError());\r\n    console.log(error);\r\n    toastr.error(\"Oops\", \"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const getProductsForHome = () => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n\r\n  try {\r\n    dispatch(asyncActionStart());\r\n    const products = [];\r\n\r\n    const collectionRef = firestore.collection(\"products\");\r\n    const query = collectionRef.where(\"bestSeller\", \"==\", true).limit(8);\r\n    const querySnap = await query.get();\r\n    for (let i = 0; i < querySnap.docs.length; i++) {\r\n      const product = {\r\n        id: querySnap.docs[i].id,\r\n        ...querySnap.docs[i].data(),\r\n      };\r\n      products.push(product);\r\n    }\r\n\r\n    dispatch({ type: FETCH_PRODUCTS, payload: { products } });\r\n    dispatch(asyncActionFinish());\r\n  } catch (error) {\r\n    dispatch(asyncActionError());\r\n\r\n    toastr.error(\"Oops\", \"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const filterProducts = (filters) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n  let lastRef = \"\";\r\n\r\n  try {\r\n    dispatch(asyncActionStart());\r\n\r\n    const products = [];\r\n\r\n    const collectionRef = firestore.collection(\"products\");\r\n    let query = collectionRef.limit(8);\r\n    if (filters.collection !== \"All\" && filters.collection !== \"Best Sellers\")\r\n      query = query.where(\"collection\", \"==\", filters.collection);\r\n\r\n    if (filters.collection === \"Best Sellers\")\r\n      query = query.where(\"bestSeller\", \"==\", true);\r\n\r\n    if (filters[\"model\"].length > 0)\r\n      query = query.where(\"modelName\", \"in\", filters[\"model\"]);\r\n    if (filters[\"price\"].length > 0) {\r\n      query = query.where(\"price\", \">=\", filters[\"price\"][0]);\r\n      query = query.where(\"price\", \"<=\", filters[\"price\"][1]);\r\n    }\r\n    const querySnap = await query.get();\r\n    const length = querySnap.docs.length;\r\n    if (length > 0) lastRef = querySnap.docs[length - 1].id;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const product = {\r\n        id: querySnap.docs[i].id,\r\n        ...querySnap.docs[i].data(),\r\n      };\r\n      products.push(product);\r\n    }\r\n\r\n    dispatch({ type: FETCH_PRODUCTS, payload: { products } });\r\n    dispatch(asyncActionFinish());\r\n    return { lastRef, disableLoadBtn: length < 8 };\r\n  } catch (error) {\r\n    dispatch(asyncActionError());\r\n    console.log(error);\r\n\r\n    toastr.error(\"Oops\", \"Something went wrong\");\r\n  }\r\n};\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\modalReducer.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\asyncActions.jsx",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\asyncReducer.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\loader.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\reducers\\productsReducer.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\signedInMenu.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Profile\\index.js",["311","312"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  update,\r\n  generateData,\r\n  isFormValid,\r\n} from \"../../../components/util/form/formActions\";\r\nimport FormField from \"../../../components/util/form/formfield\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../../components/util/button\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { BsPlusCircle as PlusCircle } from \"react-icons/bs\";\r\nimport { AiOutlineCheck as Yes, AiOutlineClose as Close } from \"react-icons/ai\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport {\r\n  uploadProfileImage,\r\n  updateUserInfo,\r\n} from \"../../../actions/userActions\";\r\nimport Loader from \"../../../components/util/loader\";\r\nimport UserLayout from \"../hoc\";\r\n\r\nconst formdata = {\r\n  firstName: {\r\n    element: \"input\",\r\n    value: \"\",\r\n    config: {\r\n      name: \"firstname_input\",\r\n      type: \"text\",\r\n      placeholder: \"Enter your first name\",\r\n      label: \"First Name\",\r\n    },\r\n    validation: {\r\n      required: true,\r\n    },\r\n    valid: false,\r\n    validationMessage: \"\",\r\n    showlabel: true,\r\n  },\r\n  lastName: {\r\n    element: \"input\",\r\n    value: \"\",\r\n    config: {\r\n      name: \"lastname_input\",\r\n      type: \"text\",\r\n      placeholder: \"Enter your last name\",\r\n      label: \"Last Name\",\r\n    },\r\n    validation: {\r\n      required: true,\r\n    },\r\n    valid: false,\r\n    validationMessage: \"\",\r\n    showlabel: true,\r\n  },\r\n  email: {\r\n    element: \"input\",\r\n    value: \"\",\r\n    config: {\r\n      name: \"email_input\",\r\n      type: \"email\",\r\n      placeholder: \"Enter your email\",\r\n      label: \"Contact Email\",\r\n    },\r\n    validation: {\r\n      required: true,\r\n      email: true,\r\n    },\r\n    valid: false,\r\n    validationMessage: \"\",\r\n    showlabel: true,\r\n  },\r\n  phone: {\r\n    element: \"input\",\r\n    value: \"\",\r\n    config: {\r\n      name: \"phone_input\",\r\n      type: \"number\",\r\n      placeholder: \"Enter your phone\",\r\n      label: \"Phone\",\r\n    },\r\n    validation: {\r\n      required: true,\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n    validationMessage: \"\",\r\n    showlabel: true,\r\n  },\r\n};\r\nfunction Profile(props) {\r\n  const [formData, setFormData] = useState(formdata);\r\n  const cropper = useRef(null);\r\n  const [userUpdating, setUserUpdating] = useState(false);\r\n  const [image, setImage] = useState({\r\n    file: null,\r\n    fileName: \"\",\r\n    cropResult: null,\r\n    image: {},\r\n  });\r\n\r\n  const cancelCrop = () => {\r\n    cropper.current.cropper.disable();\r\n\r\n    setImage({\r\n      file: null,\r\n      fileName: \"\",\r\n      cropResult: null,\r\n      image: {},\r\n    });\r\n  };\r\n\r\n  const cropImage = () => {\r\n    if (cropper.current.cropper.disabled) cropper.current.cropper.enable();\r\n\r\n    if (typeof cropper.current.cropper.getCroppedCanvas() === \"undefined\") {\r\n      return;\r\n    }\r\n\r\n    cropper.current.cropper.getCroppedCanvas().toBlob((blob) => {\r\n      let imageUrl = URL.createObjectURL(blob);\r\n      setImage({ ...image, cropResult: imageUrl, image: blob });\r\n    }, \"image/jpeg\");\r\n  };\r\n\r\n  const updateForm = (element) => {\r\n    const newFormdata = update(element, formData, \"profile\");\r\n    setFormData(newFormdata);\r\n  };\r\n\r\n  const updateInfo = async (event) => {\r\n    event.preventDefault();\r\n    setUserUpdating(true);\r\n\r\n    let dataToSubmit = generateData(formData, \"profile\");\r\n    let formIsValid = isFormValid(formData, \"profile\");\r\n    try {\r\n      if (formIsValid) {\r\n        await props.updateUserInfo(dataToSubmit);\r\n        toastr.success(\"Success\", \"Your profile info updated\");\r\n      }\r\n    } catch (error) {\r\n      toastr.error(\"Oops\", error.message);\r\n    }\r\n    setUserUpdating(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const email = props.profile.email;\r\n    if (email) {\r\n      const formdata = { ...formData };\r\n      const firstname = { ...formData[\"firstName\"] };\r\n      const lastname = { ...formData[\"lastName\"] };\r\n      const emaildata = { ...formdata[\"email\"] };\r\n      const phone = { ...formdata[\"phone\"] };\r\n      const userName = props.profile.displayName.split(\" \");\r\n      firstname.value = userName[0];\r\n      lastname.value =\r\n        userName[1] !== undefined\r\n          ? userName.slice(1, userName.length).join(\" \")\r\n          : \"\";\r\n      phone.value =\r\n        props.profile.phone !== undefined ? props.profile.phone : \"\";\r\n      emaildata.value = email;\r\n      firstname[\"valid\"] = true;\r\n      if (lastname.value) lastname[\"valid\"] = true;\r\n      if (phone.value) phone[\"valid\"] = true;\r\n      emaildata[\"valid\"] = true;\r\n      formdata[\"email\"] = emaildata;\r\n      formdata[\"firstName\"] = firstname;\r\n      formdata[\"lastName\"] = lastname;\r\n      formdata[\"phone\"] = phone;\r\n      setFormData(formdata);\r\n    }\r\n  }, [props.profile.email]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (cropper.current !== null) cropper.current.cropper.disable();\r\n    };\r\n  }, []);\r\n\r\n  const onDrop = (files) => {\r\n    // cropper.current.cropper.enable();\r\n\r\n    setImage({});\r\n    setImage({\r\n      file: files[0],\r\n      fileName: files[0].name,\r\n      cropResult: null,\r\n      image: {},\r\n    });\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    try {\r\n      await props.uploadProfileImage(image.image, image.fileName);\r\n      cancelCrop();\r\n      toastr.success(\"Success\", \"Photo has been uploaded\");\r\n      cropper.current.cropper.disable();\r\n    } catch (error) {\r\n      toastr.error(\"Oops\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserLayout>\r\n      <div className=\"user-page my-account\">\r\n        <h2 className=\"title\">My Account</h2>\r\n        <p>View and edit your personal info below.</p>\r\n        <div className=\"dash\" />\r\n\r\n        <div className=\"user-email\">\r\n          <div>Login Email:</div>\r\n          <div>{props.profile.email}</div>\r\n        </div>\r\n\r\n        <div style={{ marginTop: \"40px\" }} className=\"title\">\r\n          EDIT PHOTO:\r\n        </div>\r\n\r\n        <div className=\"profile-photo__edit\">\r\n          <Dropzone\r\n            onDrop={(e) => onDrop(e)}\r\n            multiple={false}\r\n            className=\"dropzone_box\"\r\n          >\r\n            <div className=\"wrap\">\r\n              <PlusCircle size=\"40px\" />\r\n            </div>\r\n          </Dropzone>\r\n          <div className=\"dropzone_box cropper\">\r\n            {image.file && (\r\n              <>\r\n                <div className=\"title\">RESIZE IMAGE:</div>\r\n                <Cropper\r\n                  style={{ height: 240, width: \"100%\" }}\r\n                  ref={cropper}\r\n                  src={image.file.preview}\r\n                  aspectRatio={1}\r\n                  viewMode={3}\r\n                  zoomTo={0}\r\n                  center={false}\r\n                  replace={true}\r\n                  dragMode=\"move\"\r\n                  guides={true}\r\n                  scalable={true}\r\n                  cropBoxMovable={true}\r\n                  cropBoxResizable={true}\r\n                  crop={cropImage}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          {image.file && (\r\n            <>\r\n              <div className=\"dropzone_box review\">\r\n                <div className=\"title\">REVIEW AN IMAGE:</div>\r\n                <img src={image.cropResult} alt=\"\" />\r\n                <div className=\"buttons\">\r\n                  <button onClick={uploadImage} className=\"upload\">\r\n                    <Yes size=\"25px\" color=\"#fff\" />\r\n                    {props.loading && (\r\n                      <div\r\n                        style={{\r\n                          width: \"15px\",\r\n                          position: \"absolute\",\r\n                          right: \"20px\",\r\n                        }}\r\n                      >\r\n                        <Loader size=\"20px\" color=\"primary\" />\r\n                      </div>\r\n                    )}\r\n                  </button>\r\n                  <button onClick={cancelCrop} className=\"cancel\">\r\n                    <Close size=\"25px\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <form id=\"profile-form\">\r\n          <div className=\"inline-inputs\">\r\n            <FormField\r\n              id={\"firstName\"}\r\n              formdata={formData.firstName}\r\n              change={(element) => updateForm(element)}\r\n            />\r\n            <FormField\r\n              id={\"lastName\"}\r\n              formdata={formData.lastName}\r\n              change={(element) => updateForm(element)}\r\n            />\r\n          </div>\r\n          <div className=\"inline-inputs\">\r\n            <FormField\r\n              id={\"email\"}\r\n              formdata={formData.email}\r\n              change={(element) => updateForm(element)}\r\n            />\r\n          \r\n            <FormField\r\n              id={\"phone\"}\r\n              formdata={formData.phone}\r\n              change={(element) => updateForm(element)}\r\n            />\r\n          </div>\r\n          <Button\r\n            loading={userUpdating}\r\n            onClick={updateInfo}\r\n            title=\"Update Info\"\r\n            type=\"btn-loading\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </UserLayout>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.firebase.profile,\r\n  loading: state.async.loading,\r\n});\r\nconst actions = {\r\n  uploadProfileImage,\r\n  updateUserInfo,\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Profile);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\hoc\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Header\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\actions\\userActions.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\ModalManager.jsx",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\product\\index.js",["313","314","315","316"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { RiCloseLine as Close } from \"react-icons/ri\";\r\nimport Button from \"../../util/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../../../actions/userActions\";\r\n\r\nfunction ProductModal(props) {\r\n  const [product, setProduct] = useState(props.product);\r\n\r\n  const { viewProduct } = props;\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChange = ({ target }) => {\r\n    if (target.value <= product.quantity && target.value > 0)\r\n      setQuantity(target.value);\r\n  };\r\n\r\n  const viewDetails = () => {\r\n    props.closeModal();\r\n    viewProduct();\r\n  };\r\n\r\n\r\n  const addToCart = async () => {\r\n    const data = {\r\n      product: {\r\n        id: product.id,\r\n        quantity: product.quantity,\r\n        price: product.price,\r\n\r\n      },\r\n      quantity: quantity,\r\n      dispatchProducts:true\r\n    };\r\n    const res = await props.addToCart(data);\r\n    setProduct({\r\n      ...product,\r\n      quantity: res,\r\n    });\r\n    setQuantity(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setQuantity(product.quantity);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div onClick={() => props.closeModal()} className=\"backdrop\" />\r\n      <div className=\"product product-model\">\r\n        <Close\r\n          onClick={() => props.closeModal()}\r\n          size=\"25px\"\r\n          className=\"close-icon\"\r\n        />\r\n        <div className=\"left\">\r\n          <img src={product.mainImage} alt=\"\" />\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"product-info\">\r\n            <div className=\"name\">{product.productName}</div>\r\n            <div className=\"price\">${product.price}.00</div>\r\n            <div className=\"sku\">SKU:0002</div>\r\n            <div className=\"quantity\">Quantity</div>\r\n            <div className=\"quantity-input\">\r\n              <input\r\n                max={product.quantity}\r\n                type=\"number\"\r\n                value={quantity}\r\n                onChange={(event) => onChange(event)}\r\n              />\r\n            </div>\r\n            {product.quantity === 0 && <div className=\"out\">Out of stock</div>}\r\n            <Button\r\n              disabled={product.quantity === 0}\r\n              title=\"Add to Cart \"\r\n              type=\"btn-loading\"\r\n              loading={props.loading}\r\n              onClick={addToCart}\r\n            />\r\n            {/* <Link\r\n              onClick={() => props.closeModal()}\r\n              to={`/product/${product.id}`}\r\n            >\r\n              View More Details\r\n            </Link> */}\r\n            <div onClick={viewDetails} className=\"product-link\">\r\n              {\" \"}\r\n              View More Details\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // auth: state.firebase.auth,\r\n  // profile: state.firebase.profile,\r\n  loading: state.async.loading,\r\n});\r\n\r\nconst actions = {\r\n  addToCart,\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(ProductModal);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\Product\\index.js",["317","318","319","320","321","322"],"import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport Loader from \"../../components/util/loader\";\r\nimport Button from \"../../components/util/button\";\r\nimport {\r\n  MdFavoriteBorder as Fav,\r\n  MdKeyboardArrowRight as RightArrow,\r\n  MdKeyboardArrowLeft as LeftArrow,\r\n} from \"react-icons/md\";\r\nimport TextCollapse from \"../../components/util/collapse/textCollapse\";\r\nimport ProdImg from \"../../components/util/prodImg\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  asyncActionStart,\r\n  asyncActionFinish,\r\n  asyncActionError,\r\n} from \"../../actions/asyncActions\";\r\nimport { addToCart } from \"../../actions/userActions\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Product(props) {\r\n  const [product, setProduct] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [closeCollapse, setCloseCollapse] = useState(\"not set\");\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [mount, setMount] = useState(true);\r\n  const onChange = ({ target }) => {\r\n    if (target.value <= product.quantity && target.value >= 0)\r\n      setQuantity(target.value);\r\n  };\r\n  let history = useHistory();\r\n\r\n  const addToCart = async () => {\r\n    const data = {\r\n      product: {\r\n        id: product.id,\r\n        quantity: product.quantity,\r\n        price: product.price,\r\n      },\r\n      quantity: quantity,\r\n    };\r\n    const res = await props.addToCart(data);\r\n\r\n    setProduct({\r\n      ...product,\r\n      quantity: res,\r\n    });\r\n    setQuantity(res);\r\n  };\r\n\r\n  const next = async () => {\r\n    setLoading(true);\r\n\r\n    const firestore = firebase.firestore();\r\n    const collectionRef = firestore.collection(\"products\");\r\n    let query = collectionRef;\r\n\r\n    if (filters.collection !== \"All\" && filters.collection !== \"Best Sellers\")\r\n      query = query.where(\"collection\", \"==\", filters.collection);\r\n    if (filters.collection === \"Best Sellers\")\r\n      query = query.where(\"bestSeller\", \"==\", true);\r\n\r\n    if (filters[\"model\"].length > 0)\r\n      query = query.where(\"modelName\", \"in\", filters[\"model\"]);\r\n    if (filters[\"price\"].length > 0) {\r\n      query = query.where(\"price\", \">=\", filters[\"price\"][0]);\r\n      query = query.where(\"price\", \"<=\", filters[\"price\"][1]);\r\n    }\r\n\r\n    let startAfter = await collectionRef.doc(product.id).get();\r\n    query = query.startAfter(startAfter).limit(1);\r\n    const querySnap = await query.get();\r\n    const length = querySnap.docs.length;\r\n\r\n    if (length === 1) {\r\n      const id = querySnap.docs[0].id;\r\n      props.history.push({\r\n        pathname: \"/product/\" + id,\r\n        state: {\r\n          collection: filters.collection,\r\n          model: filters.model,\r\n          price: filters.price,\r\n        },\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const before = async () => {\r\n    setLoading(true);\r\n\r\n    const firestore = firebase.firestore();\r\n    const collectionRef = firestore.collection(\"products\");\r\n\r\n    let query = collectionRef;\r\n    if (filters.collection !== \"All\" && filters.collection !== \"Best Sellers\")\r\n      query = query.where(\"collection\", \"==\", filters.collection);\r\n    if (filters.collection === \"Best Sellers\")\r\n      query = query.where(\"bestSeller\", \"==\", true);\r\n\r\n    if (filters[\"model\"].length > 0)\r\n      query = query.where(\"modelName\", \"in\", filters[\"model\"]);\r\n    if (filters[\"price\"].length > 0) {\r\n      query = query.where(\"price\", \">=\", filters[\"price\"][0]);\r\n      query = query.where(\"price\", \"<=\", filters[\"price\"][1]);\r\n    }\r\n\r\n    let endBefore = await collectionRef.doc(product.id).get();\r\n    query = query.endBefore(endBefore);\r\n    const querySnap = await query.get();\r\n    const length = querySnap.docs.length;\r\n    if (length !== 0) {\r\n      const id = querySnap.docs[length - 1].id;\r\n      props.history.push({\r\n        pathname: \"/product/\" + id,\r\n        state: {\r\n          collection: filters.collection,\r\n          model: filters.model,\r\n          price: filters.price,\r\n        },\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let product = null;\r\n    if (mount) {\r\n      setLoading(true);\r\n    }\r\n    const getProduct = async () => {\r\n      const firestore = firebase.firestore();\r\n      const productId = props.match.params[\"id\"];\r\n      let filters = {};\r\n      if (props.location.state)\r\n        filters = {\r\n          collection: props.location.state[\"collection\"] || \"All\",\r\n          price: props.location.state[\"price\"] || [],\r\n          model: props.location.state[\"model\"] || [],\r\n        };\r\n      else\r\n        filters = {\r\n          collection: \"All\",\r\n          price: [],\r\n          model: [],\r\n        };\r\n\r\n      const docRef = firestore.collection(\"products\").doc(productId);\r\n      product = await docRef.get();\r\n      setProduct({ id: product.id, ...product.data() });\r\n      setFilters(filters);\r\n      setQuantity(product.data().quantity);\r\n\r\n      if (mount) {\r\n        setLoading(false);\r\n        setMount(false);\r\n      }\r\n    };\r\n    getProduct();\r\n  }, [props.match.params[\"id\"], props.profile.cart]);\r\n\r\n  const closeOtherCollapse = (collapseName) => {\r\n    setCloseCollapse(collapseName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-details__page\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"product product-details\">\r\n          <div className=\"breadcrump\">\r\n            {filters.collection}/ {product.productName}\r\n          </div>\r\n          <div className=\"pagination\">\r\n            <LeftArrow onClick={before} className=\"back\" size=\"25px\" />\r\n            <div>Prev | Next</div>\r\n\r\n            <RightArrow onClick={next} className=\"next\" size=\"25px\" />\r\n          </div>\r\n          <div onClick={()=>history.goBack()} className=\"home-back\">\r\n          <LeftArrow className=\"back \" size=\"25px\" />\r\n          <div>Back</div>\r\n          </div>\r\n\r\n          <div className=\"left\">\r\n            {product.images && <ProdImg images={product.images}></ProdImg>}\r\n            {/* <img src={product.mainImage} alt=\"\" /> */}\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"product-info\">\r\n              <div className=\"name\">{product.productName}</div>\r\n              <div className=\"sku\">SKU:0002</div>\r\n              <div className=\"price\">${product.price}.00</div>\r\n              <div className=\"quantity\">Quantity</div>\r\n              <div className=\"quantity-input\">\r\n                <input\r\n                  max={product.quantity}\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={(event) => onChange(event)}\r\n                />\r\n              </div>\r\n              {product.quantity === 0 && (\r\n                <div className=\"out\">Out of stock</div>\r\n              )}\r\n              <div className=\"buttons\">\r\n                <Button\r\n                  loading={props.loading}\r\n                  onClick={addToCart}\r\n                  title=\"Add to Cart \"\r\n                  type=\"btn-loading\"\r\n                  disabled={product.quantity === 0}\r\n                />\r\n                <button className=\"favourite\">\r\n                  <Fav size=\"28px\" color=\"#BC4C2A\" />\r\n                </button>\r\n              </div>\r\n              <button className=\"buy-now\">Buy Now</button>\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <TextCollapse\r\n                  closeOtherCollapse={() => closeOtherCollapse(\"PRODUCT INFO\")}\r\n                  closeCollapse={closeCollapse}\r\n                  title=\"PRODUCT INFO\"\r\n                  initState={true}\r\n                >\r\n                  I'm a product detail. I'm a great place to add more\r\n                  information about your product such as sizing, material, care\r\n                  and cleaning instructions. This is also a great space to write\r\n                  what makes this product special and how your customers can\r\n                  benefit from this item.\r\n                </TextCollapse>\r\n                <TextCollapse\r\n                  closeOtherCollapse={() =>\r\n                    closeOtherCollapse(\"RETURN & REFUND POLICY\")\r\n                  }\r\n                  closeCollapse={closeCollapse}\r\n                  title=\"RETURN & REFUND POLICY\"\r\n                >\r\n                  I’m a Return and Refund policy. I’m a great place to let your\r\n                  customers know what to do in case they are dissatisfied with\r\n                  their purchase. Having a straightforward refund or exchange\r\n                  policy is a great way to build trust and reassure your\r\n                  customers that they can buy with confidence.\r\n                </TextCollapse>\r\n                <TextCollapse\r\n                  closeOtherCollapse={() => closeOtherCollapse(\"SHIPPING INFO\")}\r\n                  closeCollapse={closeCollapse}\r\n                  title=\"SHIPPING INFO\"\r\n                >\r\n                  I'm a shipping policy. I'm a great place to add more\r\n                  information about your shipping methods, packaging and cost.\r\n                  Providing straightforward information about your shipping\r\n                  policy is a great way to build trust and reassure your\r\n                  customers that they can buy from you with confidence.\r\n                </TextCollapse>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // auth: state.firebase.auth,\r\n  profile: state.firebase.profile,\r\n  loading: state.async.loading,\r\n});\r\n\r\nconst actions = {\r\n  addToCart,\r\n};\r\n\r\n// because we connect to profile each time we update profile this component will render update and re-render\r\n\r\nexport default connect(mapStateToProps, actions)(Product);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\collapse\\textCollapse.js",["323","324"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { GoPlusSmall as Plus } from \"react-icons/go\";\r\nimport { CgMathMinus as Minus } from \"react-icons/cg\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nexport default function TextCollapse(props) {\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (props.initState) {\r\n      setOpen(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.closeCollapse !== \"not set\" &&\r\n      props.closeCollapse !== props.title\r\n    )\r\n      setOpen(false);\r\n  }, [props.closeCollapse]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n    props.closeOtherCollapse();\r\n  };\r\n\r\n  const handleAngle = () =>\r\n    open ? (\r\n      <Minus color=\"#bc4c2a\" className=\"icon\" size=\"22px\" />\r\n    ) : (\r\n      <Plus color=\"#bc4c2a\" className=\"icon\" size=\"22px\" />\r\n    );\r\n\r\n  return (\r\n    <div className=\"collapse_items_wrapper\">\r\n      <List style={{ borderBottom: \"1px solid #dbdbdb\" }}>\r\n        <ListItem onClick={handleClick} style={{ padding: \"10px 23px 10px 0\" }}>\r\n          <ListItemText primary={props.title} className=\"collapse_title\" />\r\n          {handleAngle()}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <div>{props.children}</div>\r\n        </Collapse>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\prodImg.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\cart\\index.js",["325","326"],"import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../../../firebase\";\r\nimport Loader from \"../../util/loader\";\r\nimport { IoIosArrowForward as Arrow } from \"react-icons/io\";\r\nimport CartProduct from \"../../util/cartProduct\";\r\nimport Button from \"../../util/button\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { cartProductsQuery } from \"../../../querys\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addOne, remove, removeOne } from \"../../../actions/userActions\";\r\nfunction CartModel(props) {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mount, setMount] = useState(true);\r\n\r\n  const addOne = async (\r\n    productId,\r\n    productQuantity,\r\n    userProductQuantity,\r\n    total,\r\n    price\r\n  ) => {\r\n    await props.addOne(\r\n      productId,\r\n      productQuantity,\r\n      userProductQuantity,\r\n      total,\r\n      price,\r\n      true\r\n    );\r\n  };\r\n\r\n  const remove = async (productId, productQuantity, userProductQuantity) => {\r\n    await props.remove(productId, productQuantity, userProductQuantity, true);\r\n  };\r\n\r\n  const removeOne = async (\r\n    productId,\r\n    productQuantity,\r\n    userProductQuantity,\r\n    total,\r\n    price\r\n  ) => {\r\n    await props.removeOne(\r\n      productId,\r\n      productQuantity,\r\n      userProductQuantity,\r\n      total,\r\n      price,\r\n      true\r\n    );\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      if (mount) {\r\n        setLoading(true);\r\n      }\r\n      if (props.cart !== undefined) {\r\n        const firestore = firebase.firestore();\r\n        const productsIds = props.cart.reduce((acc, curr) => {\r\n          acc.push(curr.id);\r\n          return acc;\r\n        }, []);\r\n\r\n        const collectionRef = firestore.collection(\"products\");\r\n\r\n        if (productsIds.length) {\r\n          const productsRes = await collectionRef\r\n            .where(\"__name__\", \"in\", productsIds)\r\n            .get();\r\n          const products = [];\r\n          for (let i = 0; i < productsRes.docs.length; i++) {\r\n            products.push({\r\n              id: productsRes.docs[i].id,\r\n              ...productsRes.docs[i].data(),\r\n            });\r\n          }\r\n          setProducts(products.slice(0, 4));\r\n        } else setProducts([]);\r\n      }\r\n\r\n      if (mount) {\r\n        setLoading(false);\r\n        setMount(false);\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  }, [props.cart]);\r\n  // note dont use [props.userCart] rather than [props.cart] because userCart will be loaded faster than props.cart which lead to fire useEffect without cart items .\r\n\r\n  return (\r\n    <>\r\n      <div onClick={props.closeModal} className=\"backdrop\" />\r\n\r\n      <div className=\"cart-model\">\r\n        <div className=\"head\">\r\n          <Arrow onClick={props.closeModal} className=\"arrow\" size=\"30px\" />\r\n          Cart\r\n        </div>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"user-cart__products\">\r\n            <div className=\"products\">\r\n              {products.length > 0 ? (\r\n                products.map((product, i) => {\r\n                  return (\r\n                    <div key={product.id}>\r\n                      {props.cart[i] && (\r\n                        <CartProduct\r\n                          closeModal={props.closeModal}\r\n                          quantity={props.cart[i].quantity}\r\n                          product={product}\r\n                          totalPrice={props.cart[i].total}\r\n                          addOne={() =>\r\n                            addOne(\r\n                              product.id,\r\n                              product.quantity,\r\n                              props.cart[i].quantity,\r\n                              props.cart[i].total,\r\n                              product.price\r\n                            )\r\n                          }\r\n                          removeOne={() =>\r\n                            removeOne(\r\n                              product.id,\r\n                              product.quantity,\r\n                              props.cart[i].quantity,\r\n                              props.cart[i].total,\r\n                              product.price\r\n                            )\r\n                          }\r\n                          remove={() =>\r\n                            remove(\r\n                              product.id,\r\n                              product.quantity,\r\n                              props.cart[i].quantity,\r\n                              props.cart[i].total\r\n                            )\r\n                          }\r\n                        />\r\n                      )}\r\n                      {i !== products.length - 1 && products.length !== 1 && (\r\n                        <div className=\"divider\" />\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div>Cart Empty</div>\r\n              )}\r\n            </div>\r\n            <Link to=\"/cart\">\r\n              <Button\r\n                onClick={props.closeModal}\r\n                loading={false}\r\n                title=\"View Cart \"\r\n                type=\"btn-loading\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.firebase.auth,\r\n  cart: state.firestore.ordered.cart,\r\n  userCart: state.firebase.profile.cart,\r\n});\r\n\r\nconst actions = {\r\n  addOne,\r\n  remove,\r\n  removeOne,\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actions),\r\n  firestoreConnect((props) => cartProductsQuery(props.auth.uid))\r\n)(CartModel);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\querys\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cartProduct.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\util\\cartInput.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Cart\\index.js",["327"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../../../firebase\";\r\nimport UserLayout from \"../hoc\";\r\nimport CartProduct from \"../../../components/util/cartProduct\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { cartProductsQuery } from \"../../../querys\";\r\nimport { compose } from \"redux\";\r\nimport Button from \"../../../components/util/button\";\r\nimport Loader from \"../../../components/util/loader\";\r\nimport { addOne, remove, removeOne } from \"../../../actions/userActions\";\r\n\r\nfunction Cart(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [mount, setMount] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const addOne = async (\r\n    productId,\r\n    productQuantity,\r\n    userProductQuantity,\r\n    total,\r\n    price\r\n  ) => {\r\n    await props.addOne(\r\n      productId,\r\n      productQuantity,\r\n      userProductQuantity,\r\n      total,\r\n      price,\r\n      true\r\n    );\r\n  };\r\n\r\n  const remove = async (productId, productQuantity, userProductQuantity) => {\r\n    await props.remove(productId, productQuantity, userProductQuantity,true);\r\n  };\r\n\r\n  const removeOne = async (\r\n    productId,\r\n    productQuantity,\r\n    userProductQuantity,\r\n    total,\r\n    price\r\n  ) => {\r\n    await props.removeOne(\r\n      productId,\r\n      productQuantity,\r\n      userProductQuantity,\r\n      total,\r\n      price,\r\n      true\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      if (mount) {\r\n        setLoading(true);\r\n      }\r\n      if (props.cart !== undefined) {\r\n        const firestore = firebase.firestore();\r\n        let total = 0;\r\n        const productsIds = props.cart.reduce((acc, curr) => {\r\n          acc.push(curr.id);\r\n          total += curr.total;\r\n          return acc;\r\n        }, []);\r\n        setTotalPrice(total);\r\n\r\n        const collectionRef = firestore.collection(\"products\");\r\n\r\n        if (productsIds.length) {\r\n          const productsRes = await collectionRef\r\n            .where(\"__name__\", \"in\", productsIds)\r\n            .get();\r\n          const products = [];\r\n          for (let i = 0; i < productsRes.docs.length; i++) {\r\n            products.push({\r\n              id: productsRes.docs[i].id,\r\n              ...productsRes.docs[i].data(),\r\n            });\r\n          }\r\n          setProducts(products.slice(0, 4));\r\n        } else setProducts([]);\r\n      }\r\n\r\n      if (mount) {\r\n        setLoading(false);\r\n        setMount(false);\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  }, [props.cart]);\r\n\r\n  return (\r\n    <UserLayout>\r\n      <div  className=\"my-orders\">\r\n      <div className=\"mobile-checkout\">\r\n      <Button loading={false} title=\"Checkout\" type=\"btn-checkout\" />\r\n\r\n      </div>\r\n\r\n        <div className=\"left\">\r\n          <div className=\"title\">My Cart</div>\r\n          <div className=\"dash\"></div>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : products.length > 0 ? (\r\n            products.map((product, i) => {\r\n              return (\r\n                <div key={product.id}>\r\n                  {props.cart[i] && (\r\n                    <CartProduct\r\n                      viewCart={true}\r\n                      closeModal={props.closeModal}\r\n                      quantity={props.cart[i].quantity}\r\n                      product={product}\r\n                      totalPrice={props.cart[i].total}\r\n                      addOne={() =>\r\n                        addOne(\r\n                          product.id,\r\n                          product.quantity,\r\n                          props.cart[i].quantity,\r\n                          props.cart[i].total,\r\n                          product.price\r\n                        )\r\n                      }\r\n                      removeOne={() =>\r\n                        removeOne(\r\n                          product.id,\r\n                          product.quantity,\r\n                          props.cart[i].quantity,\r\n                          props.cart[i].total,\r\n                          product.price\r\n                        )\r\n                      }\r\n                      remove={() =>\r\n                        remove(\r\n                          product.id,\r\n                          product.quantity,\r\n                          props.cart[i].quantity,\r\n                          props.cart[i].total\r\n                        )\r\n                      }\r\n                    />\r\n                  )}\r\n                  {i !== products.length - 1 && products.length !== 1 && (\r\n                    <div className=\"divider\" />\r\n                  )}\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"empty-cart\">Cart Empty</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n          <div className=\"title\">Order Summary</div>\r\n          <div className=\"dash\"></div>\r\n          <div className=\"total-price\">\r\n            <div className=\"title\">Subtotal</div>\r\n            <div> ${totalPrice}.00</div>\r\n          </div>\r\n          <div className=\"shipping\">\r\n            <div className=\"title\">Shipping</div>\r\n            <div>FREE</div>\r\n          </div>\r\n          <div className=\"ship-to\">Palestine</div>\r\n          <div className=\"dash\"></div>\r\n          <div className=\"price\">\r\n            <div>Total</div>\r\n            <div> ${totalPrice}.00</div>\r\n          </div>\r\n          <Button loading={false} title=\"Checkout\" type=\"btn-checkout\" />\r\n        </div>\r\n      </div>\r\n    </UserLayout>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.firebase.auth,\r\n  cart: state.firestore.ordered.cart,\r\n  loading: state.async.loading,\r\n});\r\nconst actions = {\r\n    addOne,\r\n    remove,\r\n    removeOne,\r\n  };\r\nexport default compose(\r\n  connect(mapStateToProps,actions),\r\n  firestoreConnect((props) => cartProductsQuery(props.auth.uid))\r\n)(Cart);\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\mobile\\menu.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\components\\Models\\mobile\\filter.js",["328"],"import React, { useState, useEffect } from \"react\";\r\nimport { AiOutlineClose as Close } from \"react-icons/ai\";\r\nimport CollapseCheckbox from \"../../util/collapse/collapseCheckbox\";\r\nimport PriceCollapse from \"../../util/collapse/priceCollapse\";\r\nimport ListCollapse from \"../../util/collapse/listCollapse\";\r\n\r\nexport default function Filter(props) {\r\n  const [selectedModels, setSelectedModels] = useState(props.selectedModels);\r\n\r\n  const [filters, setFilters] = useState({\r\n    ...props.filters,\r\n  });\r\n\r\n  const handleFilters = async (newData, category, collection) => {\r\n    const newFilters = { ...filters };\r\n    if (category === \"collection\") {\r\n      if (collection === \"bestSeller\") setSelectedModels(props.models[\"All\"]);\r\n      else setSelectedModels(props.models[collection]);\r\n\r\n      newFilters[category] = newData;\r\n\r\n      newFilters[\"model\"] = [];\r\n      setFilters(newFilters);\r\n    } else {\r\n      newFilters[category] = newData;\r\n\r\n      setFilters(newFilters);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-model__mobile\">\r\n      <Close\r\n        className=\"close-icon\"\r\n        onClick={() => {\r\n          props.closeModal();\r\n        }}\r\n        size=\"30px\"\r\n      />\r\n      <div className=\"filters\">\r\n        <div className=\"title\">Filter by</div>\r\n        <div className=\"dash\"></div>\r\n        <ListCollapse\r\n          handleFilters={(filters, collection) => {\r\n            handleFilters(filters, \"collection\", collection);\r\n          }}\r\n          initState={true}\r\n          list={props.collections}\r\n          title=\"Collection\"\r\n          init={filters.collection}\r\n        />\r\n        <PriceCollapse\r\n          handleFilters={(filters) => handleFilters(filters, \"price\")}\r\n          initState={false}\r\n          title=\"Price\"\r\n          sliderBlur={() => {}}\r\n          init={filters.price}\r\n        />\r\n\r\n        <CollapseCheckbox\r\n          initState={false}\r\n          title=\"Model\"\r\n          collection={filters.collection}\r\n          list={selectedModels}\r\n          handleFilters={(filters) => handleFilters(filters, \"model\")}\r\n          init={filters.model}\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button\r\n          onClick={() => {\r\n            setFilters({\r\n              model: [],\r\n              price: [0,500],\r\n              collection: \"All\",\r\n            });\r\n            setSelectedModels(props.models[\"All\"])\r\n          }}\r\n          className=\"btn__clear-filters\"\r\n        >\r\n          Clear Filters\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            props.applyFilters(filters);\r\n            props.closeModal();\r\n          }}\r\n          className=\"btn__apply-filters\"\r\n        >\r\n          Apply\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Addresses\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\Wallet\\index.js",[],"C:\\Users\\sara_\\Desktop\\ReactApps\\GSG\\store-app\\src\\pages\\User\\WishList\\index.js",[],{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":26,"column":6,"nodeType":"335","endLine":26,"endColumn":21,"suggestions":"336"},{"ruleId":"337","severity":1,"message":"338","line":32,"column":3,"nodeType":"339","messageId":"340","endLine":32,"endColumn":16},{"ruleId":"333","severity":1,"message":"341","line":52,"column":6,"nodeType":"335","endLine":52,"endColumn":41,"suggestions":"342"},{"ruleId":"333","severity":1,"message":"334","line":102,"column":6,"nodeType":"335","endLine":102,"endColumn":8,"suggestions":"343"},{"ruleId":"333","severity":1,"message":"334","line":36,"column":6,"nodeType":"335","endLine":36,"endColumn":8,"suggestions":"344"},{"ruleId":"333","severity":1,"message":"345","line":44,"column":6,"nodeType":"335","endLine":44,"endColumn":24,"suggestions":"346"},{"ruleId":"333","severity":1,"message":"347","line":49,"column":6,"nodeType":"335","endLine":49,"endColumn":21,"suggestions":"348"},{"ruleId":"349","severity":1,"message":"350","line":55,"column":25,"nodeType":"351","messageId":"352","endLine":55,"endColumn":27},{"ruleId":"349","severity":1,"message":"350","line":58,"column":25,"nodeType":"351","messageId":"352","endLine":58,"endColumn":27},{"ruleId":"337","severity":1,"message":"353","line":2,"column":10,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"329","replacedBy":"354"},{"ruleId":"331","replacedBy":"355"},{"ruleId":"333","severity":1,"message":"356","line":26,"column":6,"nodeType":"335","endLine":26,"endColumn":18,"suggestions":"357"},{"ruleId":"333","severity":1,"message":"356","line":20,"column":6,"nodeType":"335","endLine":20,"endColumn":18,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"359","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":13},{"ruleId":"337","severity":1,"message":"360","line":8,"column":8,"nodeType":"339","messageId":"340","endLine":8,"endColumn":24},{"ruleId":"337","severity":1,"message":"361","line":10,"column":26,"nodeType":"339","messageId":"340","endLine":10,"endColumn":40},{"ruleId":"333","severity":1,"message":"362","line":175,"column":6,"nodeType":"335","endLine":175,"endColumn":27,"suggestions":"363"},{"ruleId":"333","severity":1,"message":"364","line":179,"column":45,"nodeType":"339","endLine":179,"endColumn":52},{"ruleId":"337","severity":1,"message":"353","line":5,"column":10,"nodeType":"339","messageId":"340","endLine":5,"endColumn":14},{"ruleId":"337","severity":1,"message":"365","line":14,"column":10,"nodeType":"339","messageId":"340","endLine":14,"endColumn":17},{"ruleId":"337","severity":1,"message":"366","line":14,"column":19,"nodeType":"339","messageId":"340","endLine":14,"endColumn":29},{"ruleId":"333","severity":1,"message":"367","line":48,"column":6,"nodeType":"335","endLine":48,"endColumn":8,"suggestions":"368"},{"ruleId":"337","severity":1,"message":"369","line":14,"column":3,"nodeType":"339","messageId":"340","endLine":14,"endColumn":19},{"ruleId":"337","severity":1,"message":"370","line":15,"column":3,"nodeType":"339","messageId":"340","endLine":15,"endColumn":20},{"ruleId":"337","severity":1,"message":"371","line":16,"column":3,"nodeType":"339","messageId":"340","endLine":16,"endColumn":19},{"ruleId":"337","severity":1,"message":"372","line":19,"column":10,"nodeType":"339","messageId":"340","endLine":19,"endColumn":16},{"ruleId":"333","severity":1,"message":"373","line":162,"column":6,"nodeType":"335","endLine":162,"endColumn":52,"suggestions":"374"},{"ruleId":"333","severity":1,"message":"375","line":162,"column":7,"nodeType":"376","endLine":162,"endColumn":31},{"ruleId":"333","severity":1,"message":"356","line":16,"column":6,"nodeType":"335","endLine":16,"endColumn":8,"suggestions":"377"},{"ruleId":"333","severity":1,"message":"378","line":24,"column":6,"nodeType":"335","endLine":24,"endColumn":27,"suggestions":"379"},{"ruleId":"337","severity":1,"message":"372","line":11,"column":10,"nodeType":"339","messageId":"340","endLine":11,"endColumn":16},{"ruleId":"333","severity":1,"message":"380","line":95,"column":6,"nodeType":"335","endLine":95,"endColumn":18,"suggestions":"381"},{"ruleId":"333","severity":1,"message":"380","line":96,"column":6,"nodeType":"335","endLine":96,"endColumn":18,"suggestions":"382"},{"ruleId":"337","severity":1,"message":"383","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":36},"no-native-reassign",["384"],"no-negated-in-lhs",["385"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["386"],"no-unused-vars","'LazyLoadImage' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array. You can also do a functional update 'setConfig(c => ...)' if you only need 'config' in the 'setConfig' call.",["387"],["388"],["389"],"React Hook useEffect has missing dependencies: 'loadedProducts' and 'props.products'. Either include them or remove the dependency array. You can also do a functional update 'setLoadedProducts(l => ...)' if you only need 'loadedProducts' in the 'setLoadedProducts' call.",["390"],"React Hook useMemo has a missing dependency: 'props.products'. Either include it or remove the dependency array. If 'setLoadedProducts' needs the current value of 'props.products', you can also switch to useReducer instead of useState and read 'props.products' in the reducer.",["391"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.",["384"],["385"],"React Hook useEffect has a missing dependency: 'props.initState'. Either include it or remove the dependency array.",["392"],["393"],"'axios' is defined but never used.","'CircularProgress' is defined but never used.","'CREATE_PRODUCT' is defined but never used.","React Hook useEffect has missing dependencies: 'formData', 'props.profile.displayName', and 'props.profile.phone'. Either include them or remove the dependency array.",["394"],"The ref value 'cropper.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'cropper.current' to a variable inside the effect, and use that variable in the cleanup function.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'product.quantity'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setQuantity' needs the current value of 'product.quantity'.",["395"],"'asyncActionStart' is defined but never used.","'asyncActionFinish' is defined but never used.","'asyncActionError' is defined but never used.","'toastr' is defined but never used.","React Hook useEffect has missing dependencies: 'mount', 'props.location.state', and 'props.match.params'. Either include them or remove the dependency array.",["396"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["397"],"React Hook useEffect has a missing dependency: 'props.title'. Either include it or remove the dependency array.",["398"],"React Hook useEffect has a missing dependency: 'mount'. Either include it or remove the dependency array.",["399"],["400"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"412","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"425","fix":"427"},"Update the dependencies array to be: [matchesMobile, props]",{"range":"428","text":"429"},"Update the dependencies array to be: [matchesMd, matchesSm, matchesMobile, config]",{"range":"430","text":"431"},"Update the dependencies array to be: [props]",{"range":"432","text":"433"},{"range":"434","text":"433"},"Update the dependencies array to be: [loadMoreProducts, loadedProducts, props.products]",{"range":"435","text":"436"},"Update the dependencies array to be: [props.loading, props.products]",{"range":"437","text":"438"},"Update the dependencies array to be: [props.init, props.initState]",{"range":"439","text":"440"},{"range":"441","text":"440"},"Update the dependencies array to be: [formData, props.profile.displayName, props.profile.email, props.profile.phone]",{"range":"442","text":"443"},"Update the dependencies array to be: [product.quantity]",{"range":"444","text":"445"},"Update the dependencies array to be: [mount, props.location.state, props.match.params, props.profile.cart]",{"range":"446","text":"447"},"Update the dependencies array to be: [props.initState]",{"range":"448","text":"449"},"Update the dependencies array to be: [props.closeCollapse, props.title]",{"range":"450","text":"451"},"Update the dependencies array to be: [mount, props.cart]",{"range":"452","text":"453"},{"range":"454","text":"453"},[866,881],"[matchesMobile, props]",[2213,2248],"[matchesMd, matchesSm, matchesMobile, config]",[3445,3447],"[props]",[1429,1431],[1634,1652],"[loadMoreProducts, loadedProducts, props.products]",[1831,1846],"[props.loading, props.products]",[740,752],"[props.init, props.initState]",[642,654],[4756,4777],"[formData, props.profile.displayName, props.profile.email, props.profile.phone]",[1199,1201],"[product.quantity]",[5106,5152],"[mount, props.location.state, props.match.params, props.profile.cart]",[550,552],"[props.initState]",[711,732],"[props.closeCollapse, props.title]",[2557,2569],"[mount, props.cart]",[2613,2625]]